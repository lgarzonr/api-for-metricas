{
	"info": {
		"_postman_id": "b68c1675-1a8c-4fc9-be1f-3783e646332a",
		"name": "Restaurante",
		"description": "Recurso que representa un restaurtante",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "531361"
	},
	"item": [
		{
			"name": "Agregar Restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.globals.set(\"restaurante_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"   pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"mi restaurante\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurantes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes"
					]
				},
				"description": "Petición para agregar un restaurante al API"
			},
			"response": [
				{
					"name": "Agregar Restaurante",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\n        \"nombre\": \"Chefsito\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurante",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurante"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\":\"92d04e82-c896-4c97-8c29-8edb878bf4b1\",\n    \"nombre\": \"Chefsito\"\n}"
				}
			]
		},
		{
			"name": "Obtener todos los restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of restaurantes > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/restaurantes",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes"
					]
				},
				"description": "Petición para obtener todos los restaurantes del API"
			},
			"response": [
				{
					"name": "Obtener todos los restaurante",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurantes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\n    {\n        \"nombre\": \"Chefsito\",\n        \"ciudad\": {\n            \"codigo\": \"12345\",\n            \"nombre\": \"Napoles\"\n        },\n        \"estrellas\":[\n            {\n                \"numeroEstrella\": 1,\n                \"fechaObtencion\": \"1995-12-17\"\n            },\n            {\n                \"numeroEstrella\": 2,\n                \"fechaObtencion\": \"2000-12-31\"\n            }\n        ]\n    },\n    {\n        \"nombre\": \"Osteria il Ciottolo\",\n        \"ciudad\": {\n            \"codigo\": \"12\",\n            \"nombre\": \"Verona VR\"\n        },\n        \"estrellas\":[\n            {\n                \"numeroEstrella\": 4,\n                \"fechaObtencion\": \"2021-12-17\"\n            }\n        ]\n    }\n]"
				}
			]
		},
		{
			"name": "Obtener un restaurante",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_id}}"
					]
				},
				"description": "Petición para obtener un restaurante del API"
			},
			"response": [
				{
					"name": "Obtener un restaurante",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"{{restaurante_id}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "  {\n    \"nombre\": \"Chefsito\",\n    \"ciudad\": {\n        \"id\": 1,\n        \"codigo\": \"12345\",\n        \"nombre\": \"Napoles\"\n    },\n    \"estrellas\":[\n        {\n            \"numeroEstrella\": 1,\n            \"fechaObtencion\": \"1995-12-17\"\n        },\n        {\n            \"numeroEstrella\": 2,\n            \"fechaObtencion\": \"2000-12-31\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Obtener un restaurante que no existe",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El restaurante con el id dado no existe\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_id_no_existe}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_id_no_existe}}"
					]
				},
				"description": "Petición para obtener un restaurante del API"
			},
			"response": [
				{
					"name": "no existe restaurante",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"{{restaurante_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El restaurante con el id dado no existe\"\n}"
				}
			]
		},
		{
			"name": "Actualizar un restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"The Chefsito\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}?",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_id}}"
					],
					"query": [
						{
							"key": "",
							"value": null
						}
					]
				},
				"description": "Petición para actualizar un restaurante del API"
			},
			"response": [
				{
					"name": "Actualizar un restaurante",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"{{restaurante_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": {{restaurante_id}},\n    \"nombre\": \"The Chefsito\"\n}"
				}
			]
		},
		{
			"name": "Actualizar un restaurante no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El restaurante con el id dado no existe\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"The Chefsito\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_id_no_existe}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_id_no_existe}}"
					]
				},
				"description": "Petición para actualizar un restaurante del API"
			},
			"response": [
				{
					"name": "Actualizar un restaurante",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"The Chefsito\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/restaurantes/00000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"00000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El restaurante con el id dado no existe\"\n}"
				}
			]
		},
		{
			"name": "Eliminar un restaurante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"   pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_id}}"
					]
				},
				"description": "Petición para eliminar un restaurante del API"
			},
			"response": [
				{
					"name": "Eliminar un restaurante",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurantes/{{restaurante_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"{{restaurante_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Eliminar un restaurante que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"   var data = pm.response.json();",
							"   pm.expect(data.message).to.eql(\"El restaurante con el id dado no existe\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/restaurantes/{{restaurante_id_no_existe}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurantes",
						"{{restaurante_id_no_existe}}"
					]
				},
				"description": "Petición para eliminar un restaurante del API"
			},
			"response": [
				{
					"name": "Eliminar restaurente no valido",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/restaurantes/999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"restaurantes",
								"999"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"El restaurante con el id dado no existe\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "restaurante_id",
			"value": "92d04e82-c896-4c97-8c29-8edb878bf4b1",
			"type": "string",
			"disabled": true
		},
		{
			"key": "restaurante_id_no_existe",
			"value": "92d04e82-c896-4c97-8c29-8edb878bf4b0",
			"type": "string"
		},
		{
			"key": "restaurante_id_eliminar",
			"value": "84c49d3f-4abe-4717-8ce4-71024036485b",
			"type": "string"
		}
	]
}